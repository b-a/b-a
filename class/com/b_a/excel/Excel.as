package com.b_a.excel{	import flash.utils.ByteArray;	import flash.utils.Dictionary;	/**	 * 解析excel（xlsx)文件的類	 * @author lipi	 */	public class Excel{		private var _fileByteArray:ByteArray;		private var _zip:Zip;		private var _sheetNames:Object;		private var _valueArray:Array;		private var _sheetDictionary:Array = []		//Adam+		private var _labelAmount:uint;		//Adam-		/**		 * @param fileByteArray xlsx檔的二進位資料		 * @param sheetIndex excel表索引，對應excel中的工作表的標籤，索引從0開始		 */		public function Excel(fileByteArray:ByteArray){			_fileByteArray = fileByteArray;			_zip = new Zip(_fileByteArray);			_valueArray = getValueArray()			_sheetNames = getSheetNames()		}		/**		 * 銷毀		 */		public function destroy():void {			_sheetNames = null			_valueArray=null			_sheetDictionary=null			_zip = null			_fileByteArray = null		}		/**		 * 獲取指定表名的類		 * @param	sheetName 表名		 */		public function getSheetArrayBySheetName(sheetName:String):Array {			if(_sheetNames[sheetName]==null) return null			return  getSheetArrayBySheetId(_sheetNames[sheetName])		}		//Adam+		/**		 * 取得解析後的表格標籤總數。		 * @param	null		 */		public function getSheetLabelAmount():uint {			return _labelAmount;		}		//Adam-		/**		 * 取得解析後的表格資料。值為二維陣列，第一維是行索引，第二維是列索引		 * @param	sheetIndex 索引		 */		public function getSheetArrayBySheetId(sheetIndex:int = 0):Array {			if (_sheetDictionary[sheetIndex] != null) return _sheetDictionary[sheetIndex]			var sheetIndexString:String = (sheetIndex + 1).toString();			var $byteArray:ByteArray = _zip.getFile("xl/worksheets/sheet" + sheetIndexString + ".xml");			var xmlString:String = $byteArray.readUTFBytes($byteArray.bytesAvailable);			var $xml:XML = new XML(xmlString);			var ns:Namespace = $xml.namespace();			var excelArray:Array = [];			var rowList:XMLList = $xml.ns::sheetData.ns::row;			for each(var rowListItem:XML in rowList){				var rowIndex:int = int(rowListItem.@r) - 1;				var rowArray:Array = [];				var colList:XMLList = rowListItem.ns::c;				//var colIndex:int = -1					//colIndex++				for each(var colListItem:XML in colList) {					var colIndex:int = ExcelUtil.getColIndex(colListItem.@r);					var t:String = colListItem.@t;					var v:String = colListItem.ns::v[0];					if(t == "s"){						rowArray[colIndex] = _valueArray[int(v)];					}else{						rowArray[colIndex] = v;					}				}				excelArray[rowIndex] = rowArray;			}			var mergeCellList:XMLList = $xml.ns::mergeCells.ns::mergeCell;			for each(var mergeCellXML:XML in mergeCellList){				var ref:String = mergeCellXML.@ref;				var refArr:Array = ref.split(":");				var sArr:Array = ExcelUtil.colNameToPosition(refArr[0]);				var eArr:Array = ExcelUtil.colNameToPosition(refArr[1]);				var sValue:Object;				if(excelArray[sArr[0]] != null){					sValue = excelArray[sArr[0]][sArr[1]];				}				for(var i:int = sArr[0];i<=eArr[0];i++){					for(var j:int = sArr[1];j<=eArr[1];j++){						if(excelArray[i] == null) excelArray[i] = [];						excelArray[i][j] = sValue;					}				}			}			_sheetDictionary[sheetIndex] = excelArray			return excelArray;		}		/**		 * 獲取值鍵		 */		private function getValueArray():Array {			var valueArray:Array = [];			var $byteArray:ByteArray = _zip.getFile("xl/sharedStrings.xml");			$byteArray.position = 0;			var xmlString:String = $byteArray.readUTFBytes($byteArray.bytesAvailable);			var $xml:XML = new XML(xmlString);			var ns:Namespace = $xml.namespace();			var valueList:XMLList = $xml.ns::si;			for each(var valueListItem:XML in valueList){				var textList:XMLList = valueListItem..ns::t;				var tValue:String = "";				for each(var textListItem:XML in textList){					var $cTValue:String = textListItem[0];					tValue = tValue + $cTValue;				}				valueArray.push(tValue);			}			return valueArray;		}		/**		 * 獲取總表名		 */		private function getSheetNames():Object {			var valueData:Object = { };			var index:int=-1			var $byteArray:ByteArray = _zip.getFile("xl/workbook.xml");			$byteArray.position = 0;			var xmlString:String = $byteArray.readUTFBytes($byteArray.bytesAvailable);			var $xml:XML = new XML(xmlString);			var ns:Namespace = $xml.namespace();			var valueList:XMLList = $xml.ns::sheets;			for each(var valueListItem:XML in valueList) {				var textList:XMLList = valueListItem..ns::sheet;				for each(var textListItem:XML in textList) {					index++					valueData[textListItem.@name] = index				}				_labelAmount = index+1;			}			return valueData;		}	}}